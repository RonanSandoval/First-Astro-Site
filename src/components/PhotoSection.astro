---
interface Props {
    backgroundColor: string;
    color: string;
    onLeft: boolean;
    image: string
}

const { backgroundColor, color, onLeft, image } = Astro.props;
---

<div class="section" style={{backgroundColor: backgroundColor, color: color}}>
    <div id="left-img" class="image-left" style={`background-image: url(${image});`}/>
    <div class="section-content">
        <slot/>
    </div>
    <div id="right-img" class="image-right" style={`background-image: url(${image});`}/>
</div>

<style define:vars={{image: image}}>

    .section {
        max-width: 100%;
        min-height: 50vh;
        display: flex;
        flex-direction: row;
    }

    .section .image-left {
        width: 50vw;
        max-width: 50%;
        background-size:cover;

    }

    .section .image-right {
        width: 50%;
        background-size:cover;
    }

    .section .section-content {
		width: 800px;
		max-width: 40%;
        padding-top: 1rem;
        padding-bottom: 1rem;
        margin: auto;
        
    }

</style>

<script define:vars={{onLeft : onLeft}}>
    document.addEventListener('astro:page-load', () => {
        document.getElementById("left-img").style.display = onLeft ? "block" : "none";
        document.getElementById("right-img").style.display = !onLeft ? "block" : "none";
    });
    
</script>